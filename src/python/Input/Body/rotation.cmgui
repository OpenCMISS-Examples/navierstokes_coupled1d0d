gfx define tessellation default min 4;
gfx read nodes surface.exnode;
gfx read elements surface.exelem;
gfx modify g_element surface general clear;
gfx modify g_element surface lines coordinate coordinates exterior tessellation default select_on material default selected_material default_selected;
gfx modify g_element surface surfaces coordinate coordinates tessellation default select_on material bone selected_material default_selected render_shaded;
gfx create window 1;
#/surface/ transformation:
#  |x.out| = | -1.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 | . |x.in|
#  |y.out| = |  0.000000e+00 -1.000000e+00  0.000000e+00  0.000000e+00 | . |y.in|
#  |z.out| = |  0.000000e+00  0.000000e+00  1.000000e+00  0.000000e+00 | . |z.in|
#  |h.out| = |  0.000000e+00  0.000000e+00  0.000000e+00  1.000000e+00 | . |h.in|

gfx define field rotation_matrix constant -1 0 0 0 -1 0 0 0 1;
{
@derivatives = ("value");
# change limit to 16
for ($version = 1; $version <= 1; $version++)
{
	for $derivative (@derivatives)
	{
		$original = "nodal_" . $derivative . "_v" . $version;
		$original =~ s/\//\_/;
		printf ("Processing $derivative version $version:\n");
		gfx define field $original node_value fe_field coordinates "$derivative" version "$version";
		$rotated = "rotated_" . $original;
		gfx define field $rotated matrix_multiply number_of_rows 3 fields rotation_matrix $original;
		gfx evaluate source $rotated destination $original ngroup surface;
	}
}
}
#gfx list field commands;
gfx write node surface_new.exnode group surface field coordinates group "/";
